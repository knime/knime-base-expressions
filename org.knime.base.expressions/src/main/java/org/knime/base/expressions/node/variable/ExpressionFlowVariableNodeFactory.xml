<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="expression_flow_variable.png"
	type="Manipulator" xmlns="http://knime.org/node/v4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>Variable Expression</name>
	<shortDescription>
		Allows executing custom expressions on flow variables
		and creating new or updating existing flow variables.
	</shortDescription>
	<fullDescription>
		<intro>
			<p>
				The KNIME Variable Expression node enables generic manipulation of flow
				variables within KNIME workflows.
			</p>
			<p>
				<b>Flow Variables:</b>
				Each expression is evaluated and the result is used to change an
				already existing or create a new flow variable.

				Flow variables can be
				accessed via
				<tt>$$["Flow Variable Name"]</tt>
				, or you can use the shorthand
				<tt>$$flow_variable_name</tt>
				, if the name does
				not contain any special
				characters nor spaces.
			</p>
			<p>
				<b>Operators :</b>
				The expression language supports basic operators, namely arithmetic
				(
				<tt>+</tt>
				,
				<tt>-</tt>
				,
				<tt>*</tt>
				,
				<tt>/</tt>
				float division,
				<tt>//</tt>
				integer division,
				<tt>**</tt>
				exponentiation,
				<tt>%</tt>
				modulo), comparison (
				<tt>&lt;</tt>
				,
				<tt>&lt;=</tt>
				,
				<tt>&gt;</tt>
				,
				<tt>&gt;=</tt>
				,
				<tt>=</tt>
				,
				<tt>!=</tt>
				), logical (
				<tt>and</tt>
				,
				<tt>or</tt>
				,
				<tt>not</tt>
				), string concatenation (
				<tt>+</tt>
				) and a special 'missing coalescing' operator
				<tt>??</tt>
				which sets a default value if the left operand is missing.
			</p>
			<p>
				<b>Functions: </b>
				The variable expression node supports a wide range of functions which are
				available in a catalog on the right side of the editor.
			</p>
			<p>
				<b>AI Expression Assistance (Labs):</b>
				If the KNIME AI Assistant (Labs) extension is installed, the button
				on the lower left of the code editor provides access to AI assisted
				expression generation and modification. Here you can enter commands
				in natural language and our expression assistant will replace or
				modify your current expression according to your prompt. The more
				precisely you describe what results you expect, the better the
				results will be. The AI will suggest modifications and show them to
				you in a
				<i>diff-view</i>
				(differences between your current expression on the left and the
				suggested expression on the right) which you can apply or query
				another response by entering a new or refined prompt.
			</p>
		</intro>
		<link
			href="https://docs.knime.com/latest/knime_expressions_guide/index.html">Expression language specification</link>
	</fullDescription>
	<keywords>
		<keyword>math formula</keyword>
		<keyword>calculator</keyword>
		<keyword>function</keyword>
		<keyword>string manipulation</keyword>
		<keyword>rule engine</keyword>
		<keyword>rule based</keyword>
	</keywords>
	<ports>
		<inPort index="0" name="Input flow variables"> The flow variables to be used
			in the expression.
		</inPort>
		<outPort index="0" name="Output flow variables"> The flow variables after
			applying the expression.
		</outPort>
	</ports>
</knimeNode>
