<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="expression_row_mapper.png"
	type="Manipulator" xmlns="http://knime.org/node/v5.3"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v5.3 http://knime.org/node/v5.3.xsd">
	<name>Expression</name>
	<shortDescription>
		Allows executing custom expressions on the data
		table.
	</shortDescription>
	<fullDescription>
		<intro>
			<p>
				The KNIME Expression node enables generic row-by-row data
				manipulation within KNIME workflows.
			</p>
			<p>
				<b>Data Access: </b>
				The expression is evaluated for each row in the input table and the
				result is stored in the output table. To access table data, you can
				use the following methods:
				<ul>
					<li>
						<tt>$["column name"]</tt>
						to access the value in the current row of the column with the
						given name. When the name does not contain special characters or
						spaces, you can use the shorthand notation:
						<tt>$column_name</tt>
						.
					</li>
					<li>
						<tt>$["column_name", offset]</tt>
						to reference previous or next rows relative to the current one.
						The offset is a static number. Negative offsets point to previous
						rows, positive offsets to rows next the current row. Replacing a
						column will only take effect after evaluating the expression for
						the whole table. This means that the expression only uses the
						original data from that column.
					</li>
					<li>
						<tt>$[ROW_NUMBER]</tt>
						to get the current row number, starting at 1.
					</li>
					<li>
						<tt>$[ROW_INDEX]</tt>
						to get the current row index, starting at 0.
					</li>
					<li>
						<tt>$[ROW_ID]</tt>
						to get the RowID, such as "Row99".
					</li>
				</ul>
			</p>
			<p>
				Flow variables can be accessed via
				<tt>$$["Flow Variable Name"]</tt>
				, As with column names, you can use the shorthand
				$$flow_variable_name, if the name does not contain any special
				characters nor spaces.
			</p>
			<p>
				<b>Operators :</b>
				The expression language supports basic operators, namely arithmetic
				(
				<tt>+</tt>
				,
				<tt>-</tt>
				,
				<tt>*</tt>
				,
				<tt>/</tt>
				float division,
				<tt>//</tt>
				integer division,
				<tt>**</tt>
				exponentiation,
				<tt>%</tt>
				modulo), comparison (
				<tt>&lt;</tt>
				,
				<tt>&lt;=</tt>
				,
				<tt>&gt;</tt>
				,
				<tt>&gt;=</tt>
				,
				<tt>=</tt>
				,
				<tt>!=</tt>
				), logical (
				<tt>and</tt>
				,
				<tt>or</tt>
				,
				<tt>not</tt>
				), string concatenation (
				<tt>+</tt>
				) and a special 'missing coalescing' operator
				<tt>??</tt>
				which sets a default value if the left operand is missing.
			</p>
			<p>
				<b>Functions: </b>
				The expression node supports a wide range of functions which are
				available in a catalog on the right side of the editor.
			</p>
			<p>
				<b>Column Aggregations: </b>
				A special set of functions prefixed with
				<tt>COLUMN_</tt>
				calculate aggregations over whole columns, such as their minimum,
				maximum, or mean values, for example,
				<tt> COLUMN_MIN("Column Name") </tt>
				. Note that these take a "Column
				name" instead of a value from a row
				($["column name"]) as input.
			</p>
			<p>
				<b>AI Expression Assistance (Labs):</b>
				If the KNIME AI Assistant (Labs) extension is installed, the button
				on the lower left of the code editor provides access to AI assisted
				expression generation and modification. Here you can enter commands
				in natural language and our expression assistant will replace or
				modify your current expression according to your prompt. The more
				precisely you describe what results you expect, the better the
				results will be. The AI will suggest modifications and show them to
				you in a
				<i>diff-view</i>
				(differences between your current expression on the left and the
				suggested expression on the right) which you can apply or query
				another response by entering a new or refined prompt.
			</p>
		</intro>
		<link
			href="https://docs.knime.com/latest/knime_expressions_guide/index.html">Expression language specification</link>
	</fullDescription>
	<ports>
		<inPort index="0" name="Input table">The tabular input data which will be
			used.
		</inPort>
		<outPort index="0" name="Output table">The resulting table after applying the
			expression.
		</outPort>
	</ports>
	<keywords>
		<keyword>math formula</keyword>
		<keyword>multi-row formula</keyword>
		<keyword>calculator</keyword>
		<keyword>function</keyword>
		<keyword>string manipulation</keyword>
		<keyword>rule engine</keyword>
	</keywords>
</knimeNode>
